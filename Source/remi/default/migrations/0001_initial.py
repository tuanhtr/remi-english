# -*- coding: utf-8 -*-
# Generated by Django 1.11.2 on 2017-10-25 05:25
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.IntegerField(blank=True, null=True)),
                ('title', models.TextField()),
                ('account_class', models.IntegerField()),
                ('tax_class', models.IntegerField()),
                ('is_cash', models.IntegerField(blank=True, null=True)),
                ('settlement_date_type', models.IntegerField(blank=True, null=True)),
                ('created_datetime', models.DateTimeField(blank=True, null=True)),
                ('updated_datetime', models.DateTimeField(blank=True, null=True)),
                ('deleted_flag', models.IntegerField()),
                ('account_code', models.IntegerField()),
                ('account_name', models.CharField(max_length=200)),
            ],
            options={
                'managed': False,
                'db_table': 'account',
            },
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_id', models.IntegerField()),
                ('answer', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'answer',
            },
        ),
        migrations.CreateModel(
            name='ApiRestriction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(max_length=1024)),
                ('need_owner_flag', models.IntegerField()),
                ('created_datetime', models.DateTimeField()),
                ('updated_datetime', models.DateTimeField()),
            ],
            options={
                'managed': False,
                'db_table': 'api_restriction',
            },
        ),
        migrations.CreateModel(
            name='AsyncTransaction',
            fields=[
                ('transaction_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('client_order', models.BigIntegerField(blank=True, null=True)),
                ('prev_client_order', models.BigIntegerField(blank=True, null=True)),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('accepted_datetime', models.DateTimeField(blank=True, null=True)),
                ('started_datetime', models.DateTimeField(blank=True, null=True)),
                ('finished_datetime', models.DateTimeField(blank=True, null=True)),
                ('status', models.IntegerField()),
                ('reason', models.TextField(blank=True, null=True)),
                ('method', models.TextField(blank=True, null=True)),
                ('resource_name', models.TextField(blank=True, null=True)),
                ('params', models.TextField(blank=True, null=True)),
                ('request_data', models.TextField(blank=True, null=True)),
                ('result', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'async_transaction',
            },
        ),
        migrations.CreateModel(
            name='BaseStudentLesson',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('is_done', models.IntegerField()),
                ('created_datetime', models.DateTimeField(blank=True, null=True)),
                ('updated_datetime', models.DateTimeField(blank=True, null=True)),
                ('video', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'base_student_lesson',
            },
        ),
        migrations.CreateModel(
            name='BaseTestUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_id', models.IntegerField(blank=True, null=True)),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('lesson_id', models.IntegerField(blank=True, null=True)),
                ('right_percent', models.IntegerField(blank=True, null=True)),
                ('right_number_question', models.IntegerField(blank=True, null=True)),
                ('implement_date', models.DateTimeField(blank=True, null=True)),
                ('is_done', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'base_test_user',
            },
        ),
        migrations.CreateModel(
            name='DefaultUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.CharField(max_length=100)),
                ('password', models.CharField(max_length=200)),
            ],
            options={
                'managed': False,
                'db_table': 'default_user',
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'managed': False,
                'db_table': 'django_content_type',
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'managed': False,
                'db_table': 'django_migrations',
            },
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.IntegerField()),
                ('name', models.TextField(blank=True, null=True)),
                ('created_datetime', models.DateTimeField(blank=True, null=True)),
                ('updated_datetime', models.DateTimeField(blank=True, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('type', models.IntegerField(blank=True, null=True)),
                ('summary', models.TextField(blank=True, null=True)),
                ('lesson_order', models.IntegerField(blank=True, null=True)),
                ('lesson_course_video', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'lesson',
            },
        ),
        migrations.CreateModel(
            name='Master',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('master_id', models.IntegerField()),
                ('mastertype', models.IntegerField()),
                ('name', models.CharField(max_length=20)),
                ('created_datetime', models.DateTimeField(blank=True, null=True)),
                ('updated_datetime', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'master',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson', models.IntegerField()),
                ('name', models.TextField(blank=True, null=True)),
                ('question', models.TextField(blank=True, null=True)),
                ('answer', models.TextField(blank=True, null=True)),
                ('created_datetime', models.DateTimeField(blank=True, null=True)),
                ('updated_datetime', models.DateTimeField(blank=True, null=True)),
                ('test_id', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'question',
            },
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson_id', models.IntegerField(blank=True, null=True)),
                ('type', models.IntegerField(blank=True, null=True)),
                ('question_number_goal', models.IntegerField(blank=True, null=True)),
                ('question_percent_goal', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'test',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('login_name', models.CharField(max_length=64, unique=True)),
                ('password', models.TextField(blank=True, null=True)),
                ('user_name', models.CharField(blank=True, max_length=64, null=True)),
                ('address', models.CharField(blank=True, max_length=64, null=True)),
                ('phone', models.CharField(blank=True, max_length=64, null=True)),
                ('email', models.CharField(blank=True, max_length=64, null=True)),
                ('gender', models.IntegerField()),
                ('created_datetime', models.DateTimeField(blank=True, null=True)),
                ('updated_datetime', models.DateTimeField(blank=True, null=True)),
                ('roles', models.IntegerField(blank=True, null=True)),
                ('teacher_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'user',
            },
        ),
    ]
